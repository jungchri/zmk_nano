#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <12 13>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 7>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <18 19>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <2 3>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <20 10 0>;
        };

        bootloader2 {
            bindings = <&bootloader>;
            key-positions = <9 19 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        l0 {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T                    &kp Y      &kp U      &kp I    &kp O      &kp P
&kp A  &kp S  &kp D  &kp F  &kp G                    &kp H      &kp J      &kp K    &kp L      &kp LSHIFT
&kp Z  &kp X  &kp C  &kp V  &kp B                    &kp N      &kp M      &kp DOT  &kp SLASH  &kp LEFT_CONTROL
                     &mo 1  &mt LEFT_GUI LEFT_GUI    &kp ENTER  &kp SPACE
            >;
        };

        l1 {
            bindings = <
&kp ESCAPE         &mt AT N7     &kp N8        &kp N9                 &kp C     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS      &kp EQUAL         &kp BACKSPACE
&mt LSHIFT LSHIFT  &kp NUMBER_4  &kp N5        &kp NUMBER_6           &kp V     &kp LEFT_ARROW        &kp DOWN_ARROW         &kp UP_ARROW   &kp RIGHT         &mt LGUI LEFT_GUI
&kp LEFT_CONTROL   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3           &kp N0    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &mt LSHIFT LEFT_SHIFT
                                               &mt LEFT_GUI LEFT_GUI  &mo 1     &kp SPACE             &kp RET
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
